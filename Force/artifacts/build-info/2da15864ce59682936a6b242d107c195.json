{
  "id": "2da15864ce59682936a6b242d107c195",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/ForceFactory.sol": {
        "content": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0; \n\nimport \"./Force.sol\";\n\ncontract ForceFactory {\n    address public contractAddress = address(0);\n    \n    function spawnContract() external {\n        Force f = new Force(); \n        contractAddress = address(f); \n    }\n}"
      },
      "contracts/Force.sol": {
        "content": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0; \n\n/**\n * OBJECTIVES: \n * - get any amount of ether into this contract\n */\ncontract Force {/*\n\n                   MEOW ?\n         /\\_/\\   /\n    ____/ o o \\\n  /~____  =Ã¸= /\n (______)__m_m)\n\n*/\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Force.sol": {
        "Force": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203334403da62f81a2509d4c9f002a98506de2bca81c1ed31515054b8857d4b44c64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CALLVALUE BLOCKHASH RETURNDATASIZE 0xA6 0x2F DUP2 LOG2 POP SWAP14 0x4C SWAP16 STOP 0x2A SWAP9 POP PUSH14 0xE2BCA81C1ED31515054B8857D4B4 0x4C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "136:119:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea26469706673582212203334403da62f81a2509d4c9f002a98506de2bca81c1ed31515054b8857d4b44c64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CALLVALUE BLOCKHASH RETURNDATASIZE 0xA6 0x2F DUP2 LOG2 POP SWAP14 0x4C SWAP16 STOP 0x2A SWAP9 POP PUSH14 0xE2BCA81C1ED31515054B8857D4B4 0x4C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "136:119:0:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"OBJECTIVES:  - get any amount of ether into this contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Force.sol\":\"Force\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Force.sol\":{\"keccak256\":\"0x0ee0d39db79fe1da21594930b48f68d28db7c4084d3447a38ba1479255286412\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbd4ca92f3f749fac1b23c075107ad7bcc597e684e21ec7e91321441ce620553\",\"dweb:/ipfs/QmaTM1aXJLv8x1aUbvdFVjqCJWQcgdEoR7yHG9hf6w4ctV\"]}},\"version\":1}"
        }
      },
      "contracts/ForceFactory.sol": {
        "ForceFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "contractAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "spawnContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005157600080fd5b506101f1806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063f437143b1461003b578063f6b4dfb414610045575b600080fd5b610043610063565b005b61004d6100d3565b60405161005a9190610112565b60405180910390f35b6000604051610071906100f7565b604051809103906000f08015801561008d573d6000803e3d6000fd5b509050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b605c8061016083390190565b61010c8161012d565b82525050565b60006020820190506101276000830184610103565b92915050565b60006101388261013f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fe6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203334403da62f81a2509d4c9f002a98506de2bca81c1ed31515054b8857d4b44c64736f6c63430008040033a264697066735822122090b3faa4aa0880bf877d43e87bf038bcf7b533ec9c12ca48aee07ded3b18835064736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF437143B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF6B4DFB4 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x71 SWAP1 PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5C DUP1 PUSH2 0x160 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH2 0x12D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138 DUP3 PUSH2 0x13F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CALLVALUE BLOCKHASH RETURNDATASIZE 0xA6 0x2F DUP2 LOG2 POP SWAP14 0x4C SWAP16 STOP 0x2A SWAP9 POP PUSH14 0xE2BCA81C1ED31515054B8857D4B4 0x4C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xB3 STATICCALL LOG4 0xAA ADDMOD DUP1 0xBF DUP8 PUSH30 0x43E87BF038BCF7B533EC9C12CA48AEE07DED3B18835064736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "87:196:1:-:0;;;156:1;115:43;;;;;;;;;;;;;;;;;;;;87:196;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:590:2",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "72:53:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "89:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "112:5:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "94:17:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "94:24:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:37:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "82:37:2"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "60:5:2",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "67:3:2",
                            "type": ""
                          }
                        ],
                        "src": "7:118:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "229:124:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "239:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "251:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "247:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "247:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "239:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "319:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "332:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "343:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "275:43:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "275:71:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "275:71:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "201:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "213:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "224:4:2",
                            "type": ""
                          }
                        ],
                        "src": "131:222:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "404:51:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "414:35:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "443:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "425:17:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "425:24:2"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "414:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "386:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "396:7:2",
                            "type": ""
                          }
                        ],
                        "src": "359:96:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "506:81:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "516:65:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "531:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "538:42:2",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "527:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "527:54:2"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "516:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "488:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "498:7:2",
                            "type": ""
                          }
                        ],
                        "src": "461:126:2"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063f437143b1461003b578063f6b4dfb414610045575b600080fd5b610043610063565b005b61004d6100d3565b60405161005a9190610112565b60405180910390f35b6000604051610071906100f7565b604051809103906000f08015801561008d573d6000803e3d6000fd5b509050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b605c8061016083390190565b61010c8161012d565b82525050565b60006020820190506101276000830184610103565b92915050565b60006101388261013f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fe6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203334403da62f81a2509d4c9f002a98506de2bca81c1ed31515054b8857d4b44c64736f6c63430008040033a264697066735822122090b3faa4aa0880bf877d43e87bf038bcf7b533ec9c12ca48aee07ded3b18835064736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF437143B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF6B4DFB4 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x71 SWAP1 PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5C DUP1 PUSH2 0x160 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH2 0x12D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138 DUP3 PUSH2 0x13F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CALLVALUE BLOCKHASH RETURNDATASIZE 0xA6 0x2F DUP2 LOG2 POP SWAP14 0x4C SWAP16 STOP 0x2A SWAP9 POP PUSH14 0xE2BCA81C1ED31515054B8857D4B4 0x4C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xB3 STATICCALL LOG4 0xAA ADDMOD DUP1 0xBF DUP8 PUSH30 0x43E87BF038BCF7B533EC9C12CA48AEE07DED3B18835064736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "87:196:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;169:112;;;:::i;:::-;;115:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;169:112;213:7;223:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;213:21;;271:1;245:15;;:28;;;;;;;;;;;;;;;;;;169:112;:::o;115:43::-;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:118:2:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:96::-;396:7;425:24;443:5;425:24;:::i;:::-;414:35;;404:51;;;:::o;461:126::-;498:7;538:42;531:5;527:54;516:65;;506:81;;;:::o"
            },
            "methodIdentifiers": {
              "contractAddress()": "f6b4dfb4",
              "spawnContract()": "f437143b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"contractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spawnContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ForceFactory.sol\":\"ForceFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Force.sol\":{\"keccak256\":\"0x0ee0d39db79fe1da21594930b48f68d28db7c4084d3447a38ba1479255286412\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbd4ca92f3f749fac1b23c075107ad7bcc597e684e21ec7e91321441ce620553\",\"dweb:/ipfs/QmaTM1aXJLv8x1aUbvdFVjqCJWQcgdEoR7yHG9hf6w4ctV\"]},\"contracts/ForceFactory.sol\":{\"keccak256\":\"0x13dd8ad96cccd22e56ec0d6ea91359dc336c9ae7c6f74c3fb771c5a558c33346\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc9fbe7f8741ea8e31bab8a9d4a4389d05be6829879d45fe97539d30f86f99ad\",\"dweb:/ipfs/QmTVto8EnHNvMfc5QWek3efSJUFHsx6sKBVr2RGtpeYfW8\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/Force.sol": {
        "ast": {
          "absolutePath": "contracts/Force.sol",
          "exportedSymbols": {
            "Force": [
              3
            ]
          },
          "id": 4,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "64:71:0",
                "text": " OBJECTIVES: \n - get any amount of ether into this contract"
              },
              "fullyImplemented": true,
              "id": 3,
              "linearizedBaseContracts": [
                3
              ],
              "name": "Force",
              "nameLocation": "145:5:0",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 4,
              "src": "136:119:0",
              "usedErrors": []
            }
          ],
          "src": "38:217:0"
        },
        "id": 0
      },
      "contracts/ForceFactory.sol": {
        "ast": {
          "absolutePath": "contracts/ForceFactory.sol",
          "exportedSymbols": {
            "Force": [
              3
            ],
            "ForceFactory": [
              32
            ]
          },
          "id": 33,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 5,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:23:1"
            },
            {
              "absolutePath": "contracts/Force.sol",
              "file": "./Force.sol",
              "id": 6,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 33,
              "sourceUnit": 4,
              "src": "64:21:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                3
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 32,
              "linearizedBaseContracts": [
                32
              ],
              "name": "ForceFactory",
              "nameLocation": "96:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "f6b4dfb4",
                  "id": 12,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "130:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "115:43:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "115:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 10,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "156:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "148:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 8,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "148:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "148:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 30,
                    "nodeType": "Block",
                    "src": "203:78:1",
                    "statements": [
                      {
                        "assignments": [
                          17
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 17,
                            "mutability": "mutable",
                            "name": "f",
                            "nameLocation": "219:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 30,
                            "src": "213:7:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Force_$3",
                              "typeString": "contract Force"
                            },
                            "typeName": {
                              "id": 16,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 15,
                                "name": "Force",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3,
                                "src": "213:5:1"
                              },
                              "referencedDeclaration": 3,
                              "src": "213:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Force_$3",
                                "typeString": "contract Force"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "223:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Force_$3_$",
                              "typeString": "function () returns (contract Force)"
                            },
                            "typeName": {
                              "id": 19,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 18,
                                "name": "Force",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3,
                                "src": "227:5:1"
                              },
                              "referencedDeclaration": 3,
                              "src": "227:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Force_$3",
                                "typeString": "contract Force"
                              }
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "223:11:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Force_$3",
                            "typeString": "contract Force"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "213:21:1"
                      },
                      {
                        "expression": {
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 23,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "245:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 26,
                                "name": "f",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "271:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Force_$3",
                                  "typeString": "contract Force"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Force_$3",
                                  "typeString": "contract Force"
                                }
                              ],
                              "id": 25,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "263:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "263:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "263:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "245:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 29,
                        "nodeType": "ExpressionStatement",
                        "src": "245:28:1"
                      }
                    ]
                  },
                  "functionSelector": "f437143b",
                  "id": 31,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "spawnContract",
                  "nameLocation": "178:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "191:2:1"
                  },
                  "returnParameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "203:0:1"
                  },
                  "scope": 32,
                  "src": "169:112:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 33,
              "src": "87:196:1",
              "usedErrors": []
            }
          ],
          "src": "38:245:1"
        },
        "id": 1
      }
    }
  }
}
